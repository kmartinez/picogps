#!/usr/bin/env python

from parsenmea import parsefixdata
from gpsdb import GpsDb
import logging

class TrackerUnpacker(object):

    def __init__(self, config, log_level):
        self.logger = logging.getLogger("Tracker Unpacker")
        self.logger.setLevel(log_level)
        logging.basicConfig(format='%(asctime)s - %(name)s - %(lineno)d - %(levelname)s- %(message)s')
        self.db = GpsDb(config, log_level)

    def unpackall(self):
        unprocessed = self.db.get_unprocessed_messages()
        self.logger.info("%d records to process", len(unprocessed))
        for msg in unprocessed:
            msg_id = msg[0]
            imei = msg[1]
            data = msg[2]
            try:
                (timestamp, lat, lon, alt, qual, hdop, sats) = parsefixdata(data)
            except Exception as e:
                self.logger.error("Unable to parse data \"%s\"" % data)
                self.db.set_processed(msg_id)
            try:
                self.logger.info("Saving reading from %s at %s" % (imei, timestamp))
                self.db.save_position(
                    imei, timestamp, lat, lon, alt, qual,
                    hdop, sats)
                self.db.set_processed(msg_id)
            except Exception as e:
                self.logger.critical(str(e))
                break

if __name__ == "__main__":
    TRACK = TrackerUnpacker("db.ini", 20)
    TRACK.unpackall()
